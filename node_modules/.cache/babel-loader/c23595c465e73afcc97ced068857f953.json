{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lmlol\\\\Desktop\\\\COVID\\\\covid-data-ontario\\\\src\\\\Chart.js\";\nimport { caseData } from './caseData';\nimport { testingData } from './testingData';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Brush } from 'recharts';\n\nclass Chart extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        fontFamily: \"Arial\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, \"COVID-19 Numbers In Ontario\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: caseData,\n      margin: {\n        top: 50,\n        right: 80,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      payload: [{\n        id: 'cases',\n        value: 'Number of cases',\n        type: 'square',\n        color: '#2e86c1'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Brush, {\n      dataKey: \"date\",\n      height: 30,\n      stroke: \"#2e86c1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      name: \"Cases\",\n      type: \"monotone\",\n      dataKey: \"cases\",\n      stroke: \"#2e86c1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: testingData,\n      margin: {\n        top: 50,\n        right: 80,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      formatter: value => `${value} %`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      payload: [{\n        id: 'positivity',\n        value: 'Percentage of positivity',\n        type: 'square',\n        color: '#B81D13'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      name: \"Percentage of Positivity\",\n      type: \"monotone\",\n      dataKey: \"positivity\",\n      stroke: \"#B81D13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 24\n      }\n    }))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: testingData,\n      margin: {\n        top: 50,\n        right: 80,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      formatter: value => new Intl.NumberFormat('en').format(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      payload: [{\n        id: 'tests',\n        value: 'Number of tests',\n        type: 'square',\n        color: '#7d3c98'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      name: \"Number of Tests Completed\",\n      type: \"monotone\",\n      dataKey: \"tests\",\n      stroke: \"#7d3c98\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Chart, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/lmlol/Desktop/COVID/covid-data-ontario/src/Chart.js"],"names":["caseData","testingData","React","ReactDOM","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Brush","Chart","Component","render","textAlign","fontFamily","top","right","left","bottom","id","value","type","color","Intl","NumberFormat","format","document","getElementById"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,YAAvB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,aAAxC,EAAuDC,OAAvD,EAAgEC,MAAhE,EAAwEC,mBAAxE,EAA6FC,KAA7F,QAAyG,UAAzG;;AAGA,MAAMC,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAoC;AAChCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,UAAU,EAAE;AAAlC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,eAEI,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEjB,QAAjB;AAA2B,MAAA,MAAM,EAAE;AAACkB,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,KAAK,EAAE,EAAjB;AAAqBC,QAAAA,IAAI,EAAE,EAA3B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAAC;AAACC,QAAAA,EAAE,EAAE,OAAL;AAAcC,QAAAA,KAAK,EAAE,iBAArB;AAAwCC,QAAAA,IAAI,EAAE,QAA9C;AAAwDC,QAAAA,KAAK,EAAE;AAA/D,OAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,MAAM,EAAE,EAA9B;AAAkC,MAAA,MAAM,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,OAAO,EAAC,OAA3C;AAAmD,MAAA,MAAM,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CAFJ,eAcI,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAExB,WAAjB;AAA8B,MAAA,MAAM,EAAE;AAACiB,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,KAAK,EAAE,EAAjB;AAAqBC,QAAAA,IAAI,EAAE,EAA3B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAEG,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,eAGG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,eAIG,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAGE,KAAD,IAAY,GAAEA,KAAM,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,eAKG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAAC;AAACD,QAAAA,EAAE,EAAE,YAAL;AAAmBC,QAAAA,KAAK,EAAE,0BAA1B;AAAsDC,QAAAA,IAAI,EAAE,QAA5D;AAAsEC,QAAAA,KAAK,EAAE;AAA7E,OAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,eAMG,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,0BAAX;AAAsC,MAAA,IAAI,EAAC,UAA3C;AAAsD,MAAA,OAAO,EAAC,YAA9D;AAA2E,MAAA,MAAM,EAAC,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,CADJ,CAdJ,eAyBI,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAExB,WAAjB;AAA8B,MAAA,MAAM,EAAE;AAACiB,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,KAAK,EAAE,EAAjB;AAAqBC,QAAAA,IAAI,EAAE,EAA3B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAGE,KAAD,IAAW,IAAIG,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCL,KAAnC,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAAC;AAACD,QAAAA,EAAE,EAAE,OAAL;AAAcC,QAAAA,KAAK,EAAE,iBAArB;AAAwCC,QAAAA,IAAI,EAAE,QAA9C;AAAwDC,QAAAA,KAAK,EAAE;AAA/D,OAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,2BAAX;AAAuC,MAAA,IAAI,EAAC,UAA5C;AAAuD,MAAA,OAAO,EAAC,OAA/D;AAAuE,MAAA,MAAM,EAAC,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,CAzBJ,CADJ;AAsCH;;AAxC+B;;AA2CpCtB,QAAQ,CAACY,MAAT,eAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2Bc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B","sourcesContent":["import {caseData} from './caseData';\r\nimport {testingData} from './testingData';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Brush} from 'recharts';\r\n\r\n\r\nclass Chart extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{textAlign: \"center\", fontFamily: \"Arial\"}}>COVID-19 Numbers In Ontario</h2>\r\n                <ResponsiveContainer width=\"100%\" height={500}>\r\n                    <LineChart data={caseData} margin={{top: 50, right: 80, left: 20, bottom: 5}}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend payload={[{id: 'cases', value: 'Number of cases', type: 'square', color: '#2e86c1'}]}/>\r\n                        <Brush dataKey=\"date\" height={30} stroke=\"#2e86c1\" />\r\n                        <Line name=\"Cases\" type=\"monotone\" dataKey=\"cases\" stroke=\"#2e86c1\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n\r\n                <ResponsiveContainer width=\"100%\" height={500}>\r\n                    <LineChart data={testingData} margin={{top: 50, right: 80, left: 20, bottom: 5}}>\r\n                       <CartesianGrid strokeDasharray=\"3 3\" /> \r\n                       <XAxis dataKey=\"date\" />\r\n                       <YAxis />\r\n                       <Tooltip formatter={(value) => `${value} %`}/>\r\n                       <Legend payload={[{id: 'positivity', value: 'Percentage of positivity', type: 'square', color: '#B81D13'}]}/>\r\n                       <Line name=\"Percentage of Positivity\" type=\"monotone\" dataKey=\"positivity\" stroke=\"#B81D13\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n\r\n                <ResponsiveContainer width=\"100%\" height={500}>\r\n                    <LineChart data={testingData} margin={{top: 50, right: 80, left: 20, bottom: 5}}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip formatter={(value) => new Intl.NumberFormat('en').format(value)}/>\r\n                        <Legend payload={[{id: 'tests', value: 'Number of tests', type: 'square', color: '#7d3c98'}]}/>\r\n                        <Line name=\"Number of Tests Completed\" type=\"monotone\" dataKey=\"tests\" stroke=\"#7d3c98\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<Chart />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}