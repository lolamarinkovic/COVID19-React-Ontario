{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lmlol\\\\Desktop\\\\COVID\\\\covid-data-ontario\\\\src\\\\Chart.js\";\nimport { caseData } from './caseData';\nimport { testingData } from './testingData';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nclass Chart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.CustomTooltip = ({\n      active,\n      payload,\n      label\n    }) => {\n      if (active) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 21\n          }\n        }, `${payload[0].name} : ${payload[0].value}%`));\n      }\n\n      return null;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: caseData,\n      margin: {\n        top: 50,\n        right: 50,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      payload: [{\n        id: 'cases',\n        value: 'Number of cases',\n        type: 'square',\n        color: '#2e86c1'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      name: \"Cases\",\n      type: \"monotone\",\n      dataKey: \"cases\",\n      stroke: \"#2e86c1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: testingData,\n      margin: {\n        top: 50,\n        right: 50,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      content: this.CustomTooltip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      payload: [{\n        id: 'positivity',\n        value: 'Percentage of positivity',\n        type: 'square',\n        color: '#B81D13'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      name: \"Percentage of Positivity\",\n      type: \"monotone\",\n      dataKey: \"positivity\",\n      stroke: \"#B81D13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 24\n      }\n    }))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: testingData,\n      margin: {\n        top: 50,\n        right: 50,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      payload: [{\n        id: 'tests',\n        value: 'Number of tests',\n        type: 'square',\n        color: '#7d3c98'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      name: \"Number of Tests Completed\",\n      type: \"monotone\",\n      dataKey: \"tests\",\n      stroke: \"#7d3c98\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Chart, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/lmlol/Desktop/COVID/covid-data-ontario/src/Chart.js"],"names":["caseData","testingData","React","ReactDOM","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Chart","Component","CustomTooltip","active","payload","label","name","value","render","top","right","left","bottom","id","type","color","document","getElementById"],"mappings":"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","sourcesContent":["import {caseData} from './caseData';\r\nimport {testingData} from './testingData';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\r\n\r\n\r\nclass Chart extends React.Component {\r\n    CustomTooltip = ({active, payload, label}) => {\r\n        if (active) {\r\n            return (\r\n                <div className=\"custom-tooltip\">\r\n                    <label>{`${payload[0].name} : ${payload[0].value}%`}</label>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ResponsiveContainer width=\"100%\" height={500}>\r\n                    <LineChart data={caseData} margin={{top: 50, right: 50, left: 20, bottom: 5}}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend payload={[{id: 'cases', value: 'Number of cases', type: 'square', color: '#2e86c1'}]}/>\r\n                        <Line name=\"Cases\" type=\"monotone\" dataKey=\"cases\" stroke=\"#2e86c1\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n\r\n                <ResponsiveContainer width=\"100%\" height={500}>\r\n                    <LineChart data={testingData} margin={{top: 50, right: 50, left: 20, bottom: 5}}>\r\n                       <CartesianGrid strokeDasharray=\"3 3\" /> \r\n                       <XAxis dataKey=\"date\" />\r\n                       <YAxis />\r\n                       <Tooltip content={this.CustomTooltip}/>\r\n                       <Legend payload={[{id: 'positivity', value: 'Percentage of positivity', type: 'square', color: '#B81D13'}]}/>\r\n                       <Line name=\"Percentage of Positivity\" type=\"monotone\" dataKey=\"positivity\" stroke=\"#B81D13\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n\r\n                <ResponsiveContainer width=\"100%\" height={500}>\r\n                    <LineChart data={testingData} margin={{top: 50, right: 50, left: 20, bottom: 5}}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"date\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend payload={[{id: 'tests', value: 'Number of tests', type: 'square', color: '#7d3c98'}]}/>\r\n                        <Line name=\"Number of Tests Completed\" type=\"monotone\" dataKey=\"tests\" stroke=\"#7d3c98\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<Chart />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}