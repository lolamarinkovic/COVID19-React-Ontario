{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport { warn } from './util';\nvar ACCURACY = 1e-4;\n\nvar cubicBezierFactor = function cubicBezierFactor(c1, c2) {\n  return [0, 3 * c1, 3 * c2 - 6 * c1, 3 * c1 - 3 * c2 + 1];\n};\n\nvar multyTime = function multyTime(params, t) {\n  return params.map(function (param, i) {\n    return param * Math.pow(t, i);\n  }).reduce(function (pre, curr) {\n    return pre + curr;\n  });\n};\n\nvar cubicBezier = function cubicBezier(c1, c2) {\n  return function (t) {\n    var params = cubicBezierFactor(c1, c2);\n    return multyTime(params, t);\n  };\n};\n\nvar derivativeCubicBezier = function derivativeCubicBezier(c1, c2) {\n  return function (t) {\n    var params = cubicBezierFactor(c1, c2);\n\n    var newParams = _toConsumableArray(params.map(function (param, i) {\n      return param * i;\n    }).slice(1)).concat([0]);\n\n    return multyTime(newParams, t);\n  };\n}; // calculate cubic-bezier using Newton's method\n\n\nexport var configBezier = function configBezier() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var x1 = args[0],\n      y1 = args[1],\n      x2 = args[2],\n      y2 = args[3];\n\n  if (args.length === 1) {\n    switch (args[0]) {\n      case 'linear':\n        x1 = 0.0;\n        y1 = 0.0;\n        x2 = 1.0;\n        y2 = 1.0;\n        break;\n\n      case 'ease':\n        x1 = 0.25;\n        y1 = 0.1;\n        x2 = 0.25;\n        y2 = 1.0;\n        break;\n\n      case 'ease-in':\n        x1 = 0.42;\n        y1 = 0.0;\n        x2 = 1.0;\n        y2 = 1.0;\n        break;\n\n      case 'ease-out':\n        x1 = 0.42;\n        y1 = 0.0;\n        x2 = 0.58;\n        y2 = 1.0;\n        break;\n\n      case 'ease-in-out':\n        x1 = 0.0;\n        y1 = 0.0;\n        x2 = 0.58;\n        y2 = 1.0;\n        break;\n\n      default:\n        warn(false, '[configBezier]: arguments should be one of ' + 'oneOf \\'linear\\', \\'ease\\', \\'ease-in\\', \\'ease-out\\', ' + '\\'ease-in-out\\', instead received %s', args);\n    }\n  }\n\n  warn([x1, x2, y1, y2].every(function (num) {\n    return typeof num === 'number' && num >= 0 && num <= 1;\n  }), '[configBezier]: arguments should be x1, y1, x2, y2 of [0, 1] instead received %s', args);\n  var curveX = cubicBezier(x1, x2);\n  var curveY = cubicBezier(y1, y2);\n  var derCurveX = derivativeCubicBezier(x1, x2);\n\n  var rangeValue = function rangeValue(value) {\n    if (value > 1) {\n      return 1;\n    } else if (value < 0) {\n      return 0;\n    }\n\n    return value;\n  };\n\n  var bezier = function bezier(_t) {\n    var t = _t > 1 ? 1 : _t;\n    var x = t;\n\n    for (var i = 0; i < 8; ++i) {\n      var evalT = curveX(x) - t;\n      var derVal = derCurveX(x);\n\n      if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {\n        return curveY(x);\n      }\n\n      x = rangeValue(x - evalT / derVal);\n    }\n\n    return curveY(x);\n  };\n\n  bezier.isStepper = false;\n  return bezier;\n};\nexport var configSpring = function configSpring() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$stiff = config.stiff,\n      stiff = _config$stiff === void 0 ? 100 : _config$stiff,\n      _config$damping = config.damping,\n      damping = _config$damping === void 0 ? 8 : _config$damping,\n      _config$dt = config.dt,\n      dt = _config$dt === void 0 ? 17 : _config$dt;\n\n  var stepper = function stepper(currX, destX, currV) {\n    var FSpring = -(currX - destX) * stiff;\n    var FDamping = currV * damping;\n    var newV = currV + (FSpring - FDamping) * dt / 1000;\n    var newX = currV * dt / 1000 + currX;\n\n    if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {\n      return [destX, 0];\n    }\n\n    return [newX, newV];\n  };\n\n  stepper.isStepper = true;\n  stepper.dt = dt;\n  return stepper;\n};\nexport var configEasing = function configEasing() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var easing = args[0];\n\n  if (typeof easing === 'string') {\n    switch (easing) {\n      case 'ease':\n      case 'ease-in-out':\n      case 'ease-out':\n      case 'ease-in':\n      case 'linear':\n        return configBezier(easing);\n\n      case 'spring':\n        return configSpring();\n\n      default:\n        warn(false, '[configEasing]: first argument should be one of \\'ease\\', \\'ease-in\\', ' + '\\'ease-out\\', \\'ease-in-out\\', \\'linear\\' and \\'spring\\', instead  received %s', args);\n    }\n  }\n\n  if (typeof easing === 'function') {\n    return easing;\n  }\n\n  warn(false, '[configEasing]: first argument type should be function or ' + 'string, instead received %s', args);\n  return null;\n};","map":{"version":3,"sources":["C:/Users/lmlol/node_modules/react-smooth/es6/easing.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","warn","ACCURACY","cubicBezierFactor","c1","c2","multyTime","params","t","map","param","Math","pow","reduce","pre","curr","cubicBezier","derivativeCubicBezier","newParams","slice","concat","configBezier","_len","arguments","args","_key","x1","y1","x2","y2","every","num","curveX","curveY","derCurveX","rangeValue","value","bezier","_t","x","evalT","derVal","abs","isStepper","configSpring","config","undefined","_config$stiff","stiff","_config$damping","damping","_config$dt","dt","stepper","currX","destX","currV","FSpring","FDamping","newV","newX","configEasing","_len2","_key2","easing"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { warn } from './util';\nvar ACCURACY = 1e-4;\n\nvar cubicBezierFactor = function cubicBezierFactor(c1, c2) {\n  return [0, 3 * c1, 3 * c2 - 6 * c1, 3 * c1 - 3 * c2 + 1];\n};\n\nvar multyTime = function multyTime(params, t) {\n  return params.map(function (param, i) {\n    return param * Math.pow(t, i);\n  }).reduce(function (pre, curr) {\n    return pre + curr;\n  });\n};\n\nvar cubicBezier = function cubicBezier(c1, c2) {\n  return function (t) {\n    var params = cubicBezierFactor(c1, c2);\n    return multyTime(params, t);\n  };\n};\n\nvar derivativeCubicBezier = function derivativeCubicBezier(c1, c2) {\n  return function (t) {\n    var params = cubicBezierFactor(c1, c2);\n\n    var newParams = _toConsumableArray(params.map(function (param, i) {\n      return param * i;\n    }).slice(1)).concat([0]);\n\n    return multyTime(newParams, t);\n  };\n}; // calculate cubic-bezier using Newton's method\n\n\nexport var configBezier = function configBezier() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var x1 = args[0],\n      y1 = args[1],\n      x2 = args[2],\n      y2 = args[3];\n\n  if (args.length === 1) {\n    switch (args[0]) {\n      case 'linear':\n        x1 = 0.0;\n        y1 = 0.0;\n        x2 = 1.0;\n        y2 = 1.0;\n        break;\n\n      case 'ease':\n        x1 = 0.25;\n        y1 = 0.1;\n        x2 = 0.25;\n        y2 = 1.0;\n        break;\n\n      case 'ease-in':\n        x1 = 0.42;\n        y1 = 0.0;\n        x2 = 1.0;\n        y2 = 1.0;\n        break;\n\n      case 'ease-out':\n        x1 = 0.42;\n        y1 = 0.0;\n        x2 = 0.58;\n        y2 = 1.0;\n        break;\n\n      case 'ease-in-out':\n        x1 = 0.0;\n        y1 = 0.0;\n        x2 = 0.58;\n        y2 = 1.0;\n        break;\n\n      default:\n        warn(false, '[configBezier]: arguments should be one of ' + 'oneOf \\'linear\\', \\'ease\\', \\'ease-in\\', \\'ease-out\\', ' + '\\'ease-in-out\\', instead received %s', args);\n    }\n  }\n\n  warn([x1, x2, y1, y2].every(function (num) {\n    return typeof num === 'number' && num >= 0 && num <= 1;\n  }), '[configBezier]: arguments should be x1, y1, x2, y2 of [0, 1] instead received %s', args);\n  var curveX = cubicBezier(x1, x2);\n  var curveY = cubicBezier(y1, y2);\n  var derCurveX = derivativeCubicBezier(x1, x2);\n\n  var rangeValue = function rangeValue(value) {\n    if (value > 1) {\n      return 1;\n    } else if (value < 0) {\n      return 0;\n    }\n\n    return value;\n  };\n\n  var bezier = function bezier(_t) {\n    var t = _t > 1 ? 1 : _t;\n    var x = t;\n\n    for (var i = 0; i < 8; ++i) {\n      var evalT = curveX(x) - t;\n      var derVal = derCurveX(x);\n\n      if (Math.abs(evalT - t) < ACCURACY || derVal < ACCURACY) {\n        return curveY(x);\n      }\n\n      x = rangeValue(x - evalT / derVal);\n    }\n\n    return curveY(x);\n  };\n\n  bezier.isStepper = false;\n  return bezier;\n};\nexport var configSpring = function configSpring() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$stiff = config.stiff,\n      stiff = _config$stiff === void 0 ? 100 : _config$stiff,\n      _config$damping = config.damping,\n      damping = _config$damping === void 0 ? 8 : _config$damping,\n      _config$dt = config.dt,\n      dt = _config$dt === void 0 ? 17 : _config$dt;\n\n  var stepper = function stepper(currX, destX, currV) {\n    var FSpring = -(currX - destX) * stiff;\n    var FDamping = currV * damping;\n    var newV = currV + (FSpring - FDamping) * dt / 1000;\n    var newX = currV * dt / 1000 + currX;\n\n    if (Math.abs(newX - destX) < ACCURACY && Math.abs(newV) < ACCURACY) {\n      return [destX, 0];\n    }\n\n    return [newX, newV];\n  };\n\n  stepper.isStepper = true;\n  stepper.dt = dt;\n  return stepper;\n};\nexport var configEasing = function configEasing() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  var easing = args[0];\n\n  if (typeof easing === 'string') {\n    switch (easing) {\n      case 'ease':\n      case 'ease-in-out':\n      case 'ease-out':\n      case 'ease-in':\n      case 'linear':\n        return configBezier(easing);\n\n      case 'spring':\n        return configSpring();\n\n      default:\n        warn(false, '[configEasing]: first argument should be one of \\'ease\\', \\'ease-in\\', ' + '\\'ease-out\\', \\'ease-in-out\\', \\'linear\\' and \\'spring\\', instead  received %s', args);\n    }\n  }\n\n  if (typeof easing === 'function') {\n    return easing;\n  }\n\n  warn(false, '[configEasing]: first argument type should be function or ' + 'string, instead received %s', args);\n  return null;\n};"]},"metadata":{},"sourceType":"module"}